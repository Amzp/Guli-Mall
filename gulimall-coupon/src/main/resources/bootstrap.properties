# Nacos Config元数据配置
#     1. bootstrap配置文件在应用的启动阶段较早被加载，用于配置与引导上下文相关的参数，如Spring Cloud Config Client的配置参数。
#     2. 使用bootstrap配置文件可以让应用在启动早期就从配置中心拉取配置，以确保应用启动过程中的任何组件都可以使用这些配置。
#     3. bootstrap配置文件对于需要在应用上下文之前初始化配置的场景非常有用，如外部配置中心的配置。
# 注意：Nacos Config配置中心的配置优先级高于本地配置文件，Nacos配置中心和本地配置文件中都定义了相同的配置属性，那么来自Nacos配置中心的值会覆盖本地定义的值。
# 配置优先级：
# 当Spring Cloud应用启动时，它会按照一定的顺序来加载配置信息。这个顺序大致如下：
#     1. Bootstrap配置（bootstrap.properties或bootstrap.yml），这是最先加载的，主要用于配置如何从外部源（如配置中心）拉取配置。
#     2. 外部配置中心的配置，如Nacos Config配置中心。当应用与配置中心集成时，从配置中心拉取的配置将覆盖相同的本地配置。
#     3. 应用的本地配置（application.properties或application.yml）。

# 定义微服务的应用名称：gulimall-coupon是服务在注册中心注册时使用的唯一标识。
spring.application.name=gulimall-coupon

# Nacos Config配置中心地址
spring.cloud.nacos.config.server-addr=127.0.0.1:8848
spring.cloud.nacos.config.namespace=3534ef93-52e2-4905-97d3-77b0a232b559
spring.cloud.nacos.config.group=prod

spring.cloud.nacos.config.ext-config[0].data-id=datasource.yml
spring.cloud.nacos.config.ext-config[0].group=dev
spring.cloud.nacos.config.ext-config[0].refresh=true

spring.cloud.nacos.config.ext-config[1].data-id=mybatis.yml
spring.cloud.nacos.config.ext-config[1].group=dev
spring.cloud.nacos.config.ext-config[1].refresh=true

spring.cloud.nacos.config.ext-config[2].data-id=other.yml
spring.cloud.nacos.config.ext-config[2].group=dev
spring.cloud.nacos.config.ext-config[2].refresh=true