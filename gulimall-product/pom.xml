<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 项目基本配置 -->
    <groupId>com.atguigu.gulimall</groupId> <!-- 项目的组织ID -->
    <artifactId>gulimall-product</artifactId> <!-- 项目的唯一标识符 -->
    <version>0.0.1-SNAPSHOT</version> <!-- 项目的版本号 -->
    <name>gulimall-product</name> <!-- 项目的名称 -->
    <description>谷粒商城-商品服务</description> <!-- 项目的描述 -->

    <!-- 项目属性配置 -->
    <properties>
        <java.version>1.8</java.version> <!-- 指定Java版本 -->
        <spring-cloud.version>Greenwich.SR3</spring-cloud.version> <!-- 指定Spring Cloud版本 -->
    </properties>

    <!-- 依赖管理开始 -->
    <dependencies>
        <!-- Gulimall通用模块依赖 -->
        <dependency>
            <groupId>com.atguigu.gulimall</groupId>
            <artifactId>gulimall-common</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <!-- Spring Boot Web依赖，用于构建基于Spring Boot的Web应用 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Cloud OpenFeign依赖，用于实现服务间的调用 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

        <!-- Spring Boot Test依赖，用于单元测试和集成测试，注意其作用域为test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Thymeleaf模板引擎依赖，用于动态生成HTML页面 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- 引入spring-boot配置处理器依赖，用于自动处理和生成应用的配置类 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>


        <!-- Redis依赖，用于实现缓存功能-->
        <!-- 引入Spring Boot的Redis支持，采用starter方式，自动配置简化开发 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <!-- 排除默认的Lettuce客户端，选择使用Jedis -->
            <exclusions>
                <exclusion>
                    <groupId>io.lettuce</groupId>
                    <artifactId>lettuce-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- 引入Jedis作为Redis的客户端库 -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>

        <!-- Redisson客户端依赖，用于Java客户端与Redis服务器之间的通信 -->
        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson</artifactId>
            <version>3.12.0</version>
        </dependency>

        <!-- Spring Boot Cache依赖，用于实现缓存功能 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <!-- Spring Boot Actuator依赖，用于提供应用监控和管理的端点，包括健康检查、指标、审计等 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- 整合Spring Session实现会话管理 -->
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>



    </dependencies>
    <!-- 依赖管理结束 -->



    <!-- 依赖管理 -->
    <dependencyManagement>
        <!-- 定义依赖集合，统一管理依赖的版本 -->
        <dependencies>
            <!-- 引入Spring Cloud的依赖版本管理 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--配置Maven编译插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
